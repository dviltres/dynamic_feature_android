plugins {
    alias libs.plugins.application
    alias libs.plugins.kotlin
    alias libs.plugins.kapt
}

android {
    namespace 'com.dviltres.dynamic_feature_android'
    compileSdk libs.versions.compileSdkVersion.get().toInteger()

    defaultConfig {
        applicationId "com.dviltres.dynamic_feature_android"
        minSdk = libs.versions.minSdkVersion.get().toInteger()
        targetSdk = libs.versions.targetSdkVersion.get().toInteger()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    def jvm = JavaVersion.toVersion(libs.versions.jvm.get())
    compileOptions {
        sourceCompatibility jvm
        targetCompatibility jvm
    }
    kotlinOptions {
        jvmTarget = jvm
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.composeVersion.get()
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    dynamicFeatures = [':identity_verification']
}

dependencies {
    implementation(libs.bundles.accompanistBundle)
    implementation(libs.appCompat)
    implementation(libs.accompanistInsets)
    implementation(libs.coreKtx)
    implementation(libs.coroutinesAndroid)
    implementation(libs.coroutinesCore)
    implementation(libs.composeMaterial3)
    implementation(libs.inject)
    implementation(libs.espressoCore)
    implementation(libs.testRules)

    //Kotlin
    implementation(platform(libs.kotlinBom))
    implementation(libs.bundles.kotlinBomBundle)

    //Jetpack Compose Libraries
    implementation(platform(libs.composeBom))
    implementation(libs.composeNavigation)
    implementation(libs.bundles.composeBomBundle)

    implementation(libs.featureDelivery)
    implementation(libs.featureDeliveryKtk)

    testImplementation(libs.junit)
    androidTestImplementation(libs.extJunit)
    androidTestImplementation(libs.espressoCore)
}